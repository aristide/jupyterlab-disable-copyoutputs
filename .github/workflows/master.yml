name: Build

on:
  push:
    branches: master

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-3.9-${{ hashFiles('package.json') }}
          restore-keys: |
            pip-3.9-
            pip-
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel twine setuptools packaging jupyterlab~=3.0 jupyter_packaging~=0.7.9
          jlpm

      - name: Create server extension # and pip install
        run: |
          jlpm run build:prod

      - name: Package extension
        run: |
          python setup.py sdist bdist_wheel
      - name: upload python build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

      - name: upload typescript build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: lib
          path: lib

  publish:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Download build artifacts
        uses: actions/download-artifact@v3
      - run: yarn
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Publish labextension NPM
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          skip_existing: true